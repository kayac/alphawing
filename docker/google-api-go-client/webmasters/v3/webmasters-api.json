{
 "kind": "discovery#restDescription",
 "etag": "\"uUWyYHXmEn-ab7WLvo8qNz2S8ws/sCAxuVQJb4ynjZxsnsm28T2muEw\"",
 "discoveryVersion": "v1",
 "id": "webmasters:v3",
 "name": "webmasters",
 "version": "v3",
 "revision": "20140908",
 "title": "Webmaster Tools API",
 "description": "Lets you view Google Webmaster Tools data for your verified sites.",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "https://www.google.com/images/icons/product/webmaster_tools-16.png",
  "x32": "https://www.google.com/images/icons/product/webmaster_tools-32.png"
 },
 "documentationLink": "https://developers.google.com/webmaster-tools/v3/welcome",
 "protocol": "rest",
 "baseUrl": "https://www.googleapis.com/webmasters/v3/",
 "basePath": "/webmasters/v3/",
 "rootUrl": "https://www.googleapis.com/",
 "servicePath": "webmasters/v3/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/webmasters": {
     "description": "View and modify Webmaster Tools data for your verified sites"
    },
    "https://www.googleapis.com/auth/webmasters.readonly": {
     "description": "View Webmaster Tools data for your verified sites"
    }
   }
  }
 },
 "schemas": {
  "SitemapsListResponse": {
   "id": "SitemapsListResponse",
   "type": "object",
   "description": "List of sitemaps.",
   "properties": {
    "sitemap": {
     "type": "array",
     "description": "Information about a sitemap entry.",
     "items": {
      "$ref": "WmxSitemap"
     }
    }
   }
  },
  "SitesListResponse": {
   "id": "SitesListResponse",
   "type": "object",
   "description": "List of sites with access level information.",
   "properties": {
    "siteEntry": {
     "type": "array",
     "description": "Access level information for a Webmaster Tools site.",
     "items": {
      "$ref": "WmxSite"
     }
    }
   }
  },
  "UrlCrawlErrorCount": {
   "id": "UrlCrawlErrorCount",
   "type": "object",
   "description": "An entry in a URL crawl errors time series.",
   "properties": {
    "count": {
     "type": "string",
     "description": "The error count at the given timestamp.",
     "format": "int64"
    },
    "timestamp": {
     "type": "string",
     "description": "The time (well, date) when errors were detected, in RFC 3339 format.",
     "format": "date-time"
    }
   }
  },
  "UrlCrawlErrorCountsPerType": {
   "id": "UrlCrawlErrorCountsPerType",
   "type": "object",
   "description": "Number of errors per day for a specific error type (defined by platform and category).",
   "properties": {
    "category": {
     "type": "string",
     "description": "The crawl error type."
    },
    "entries": {
     "type": "array",
     "description": "The error count entries time series.",
     "items": {
      "$ref": "UrlCrawlErrorCount"
     }
    },
    "platform": {
     "type": "string",
     "description": "Corresponding to the user agent that made the request."
    }
   }
  },
  "UrlCrawlErrorsCountsQueryResponse": {
   "id": "UrlCrawlErrorsCountsQueryResponse",
   "type": "object",
   "description": "A time series of the number of URL crawl errors per error category and platform.",
   "properties": {
    "countPerTypes": {
     "type": "array",
     "description": "The time series of the number of URL crawl errors for per error category and platform.",
     "items": {
      "$ref": "UrlCrawlErrorCountsPerType"
     }
    }
   }
  },
  "UrlCrawlErrorsSample": {
   "id": "UrlCrawlErrorsSample",
   "type": "object",
   "properties": {
    "first_detected": {
     "type": "string",
     "description": "The time the error was first detected, in RFC 3339 format.",
     "format": "date-time"
    },
    "last_crawled": {
     "type": "string",
     "description": "The time when the URL was last crawled, in RFC 3339 format.",
     "format": "date-time"
    },
    "pageUrl": {
     "type": "string",
     "description": "The URL of an error, relative to the site."
    },
    "responseCode": {
     "type": "integer",
     "description": "The HTTP response code, if any.",
     "format": "int32"
    },
    "urlDetails": {
     "$ref": "UrlSampleDetails",
     "description": "Additional details about the URL, set only when calling get()."
    }
   }
  },
  "UrlCrawlErrorsSamplesListResponse": {
   "id": "UrlCrawlErrorsSamplesListResponse",
   "type": "object",
   "description": "List of crawl error samples.",
   "properties": {
    "urlCrawlErrorSample": {
     "type": "array",
     "description": "Information about the sample URL and its crawl error.",
     "items": {
      "$ref": "UrlCrawlErrorsSample"
     }
    }
   }
  },
  "UrlSampleDetails": {
   "id": "UrlSampleDetails",
   "type": "object",
   "description": "Additional details about the URL, set only when calling get().",
   "properties": {
    "containingSitemaps": {
     "type": "array",
     "description": "List of sitemaps pointing at this URL.",
     "items": {
      "type": "string"
     }
    },
    "linkedFromUrls": {
     "type": "array",
     "description": "A sample set of URLs linking to this URL.",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "WmxSite": {
   "id": "WmxSite",
   "type": "object",
   "description": "Access level information for a Webmaster Tools site.",
   "properties": {
    "permissionLevel": {
     "type": "string",
     "description": "The user's permission level for the site."
    },
    "siteUrl": {
     "type": "string",
     "description": "The URL of the site."
    }
   }
  },
  "WmxSitemap": {
   "id": "WmxSitemap",
   "type": "object",
   "properties": {
    "contents": {
     "type": "array",
     "description": "The various content types in the sitemap.",
     "items": {
      "$ref": "WmxSitemapContent"
     }
    },
    "errors": {
     "type": "string",
     "description": "Number of errors in the sitemap - issues with the sitemap itself, that needs to be fixed before it can be processed correctly.",
     "format": "int64"
    },
    "isPending": {
     "type": "boolean",
     "description": "If true, the sitemap has not been processed."
    },
    "isSitemapsIndex": {
     "type": "boolean",
     "description": "If true, the sitemap is a collection of sitemaps."
    },
    "lastDownloaded": {
     "type": "string",
     "description": "Date & time in which this sitemap was last downloaded. Date format is in RFC 3339 format (yyyy-mm-dd).",
     "format": "date-time"
    },
    "lastSubmitted": {
     "type": "string",
     "description": "Date & time in which this sitemap was submitted. Date format is in RFC 3339 format (yyyy-mm-dd).",
     "format": "date-time"
    },
    "path": {
     "type": "string",
     "description": "The url of the sitemap."
    },
    "type": {
     "type": "string",
     "description": "The type of the sitemap (for example \"sitemap\")."
    },
    "warnings": {
     "type": "string",
     "description": "Number of warnings for the sitemap - issues with URLs in the sitemaps.",
     "format": "int64"
    }
   }
  },
  "WmxSitemapContent": {
   "id": "WmxSitemapContent",
   "type": "object",
   "description": "Information about the various content types in the sitemap.",
   "properties": {
    "indexed": {
     "type": "string",
     "description": "The number of URLs from the sitemap that were indexed (of the content type).",
     "format": "int64"
    },
    "submitted": {
     "type": "string",
     "description": "The number of URLs in the sitemap (of the content type).",
     "format": "int64"
    },
    "type": {
     "type": "string",
     "description": "The specific type of content in this sitemap (for example \"web\", \"images\")."
    }
   }
  }
 },
 "resources": {
  "sitemaps": {
   "methods": {
    "delete": {
     "id": "webmasters.sitemaps.delete",
     "path": "sites/{siteUrl}/sitemaps/{feedpath}",
     "httpMethod": "DELETE",
     "description": "Deletes a sitemap from this site.",
     "parameters": {
      "feedpath": {
       "type": "string",
       "description": "The URL of the actual sitemap (for example http://www.example.com/sitemap.xml).",
       "required": true,
       "location": "path"
      },
      "siteUrl": {
       "type": "string",
       "description": "The site's URL, including protocol, for example 'http://www.example.com/'",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "siteUrl",
      "feedpath"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/webmasters"
     ]
    },
    "get": {
     "id": "webmasters.sitemaps.get",
     "path": "sites/{siteUrl}/sitemaps/{feedpath}",
     "httpMethod": "GET",
     "description": "Retrieves information about a specific sitemap.",
     "parameters": {
      "feedpath": {
       "type": "string",
       "description": "The URL of the actual sitemap (for example http://www.example.com/sitemap.xml).",
       "required": true,
       "location": "path"
      },
      "siteUrl": {
       "type": "string",
       "description": "The site's URL, including protocol, for example 'http://www.example.com/'",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "siteUrl",
      "feedpath"
     ],
     "response": {
      "$ref": "WmxSitemap"
     },
     "scopes": [
      "https://www.googleapis.com/auth/webmasters",
      "https://www.googleapis.com/auth/webmasters.readonly"
     ]
    },
    "list": {
     "id": "webmasters.sitemaps.list",
     "path": "sites/{siteUrl}/sitemaps",
     "httpMethod": "GET",
     "description": "Lists sitemaps uploaded to the site.",
     "parameters": {
      "siteUrl": {
       "type": "string",
       "description": "The site's URL, including protocol, for example 'http://www.example.com/'",
       "required": true,
       "location": "path"
      },
      "sitemapIndex": {
       "type": "string",
       "description": "A URL of a site's sitemap index.",
       "location": "query"
      }
     },
     "parameterOrder": [
      "siteUrl"
     ],
     "response": {
      "$ref": "SitemapsListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/webmasters",
      "https://www.googleapis.com/auth/webmasters.readonly"
     ]
    },
    "submit": {
     "id": "webmasters.sitemaps.submit",
     "path": "sites/{siteUrl}/sitemaps/{feedpath}",
     "httpMethod": "PUT",
     "description": "Submits a sitemap for a site.",
     "parameters": {
      "feedpath": {
       "type": "string",
       "description": "The URL of the sitemap to add.",
       "required": true,
       "location": "path"
      },
      "siteUrl": {
       "type": "string",
       "description": "The site's URL, including protocol, for example 'http://www.example.com/'",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "siteUrl",
      "feedpath"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/webmasters"
     ]
    }
   }
  },
  "sites": {
   "methods": {
    "add": {
     "id": "webmasters.sites.add",
     "path": "sites/{siteUrl}",
     "httpMethod": "PUT",
     "description": "Adds a site to the set of the user's sites in Webmaster Tools.",
     "parameters": {
      "siteUrl": {
       "type": "string",
       "description": "The URL of the site to add.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "siteUrl"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/webmasters"
     ]
    },
    "delete": {
     "id": "webmasters.sites.delete",
     "path": "sites/{siteUrl}",
     "httpMethod": "DELETE",
     "description": "Removes a site from the set of the user's Webmaster Tools sites.",
     "parameters": {
      "siteUrl": {
       "type": "string",
       "description": "The site's URL, including protocol, for example 'http://www.example.com/'",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "siteUrl"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/webmasters"
     ]
    },
    "get": {
     "id": "webmasters.sites.get",
     "path": "sites/{siteUrl}",
     "httpMethod": "GET",
     "description": "Retrieves information about specific site.",
     "parameters": {
      "siteUrl": {
       "type": "string",
       "description": "The site's URL, including protocol, for example 'http://www.example.com/'",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "siteUrl"
     ],
     "response": {
      "$ref": "WmxSite"
     },
     "scopes": [
      "https://www.googleapis.com/auth/webmasters",
      "https://www.googleapis.com/auth/webmasters.readonly"
     ]
    },
    "list": {
     "id": "webmasters.sites.list",
     "path": "sites",
     "httpMethod": "GET",
     "description": "Lists your Webmaster Tools sites.",
     "response": {
      "$ref": "SitesListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/webmasters",
      "https://www.googleapis.com/auth/webmasters.readonly"
     ]
    }
   }
  },
  "urlcrawlerrorscounts": {
   "methods": {
    "query": {
     "id": "webmasters.urlcrawlerrorscounts.query",
     "path": "sites/{siteUrl}/urlCrawlErrorsCounts/query",
     "httpMethod": "GET",
     "description": "Retrieves a time series of the number of URL crawl errors per error category and platform.",
     "parameters": {
      "category": {
       "type": "string",
       "description": "The crawl error category, for example 'serverError'. If not specified, we return results for all categories.",
       "enum": [
        "authPermissions",
        "manyToOneRedirect",
        "notFollowed",
        "notFound",
        "other",
        "roboted",
        "serverError",
        "soft404"
       ],
       "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
       ],
       "location": "query"
      },
      "latestCountsOnly": {
       "type": "boolean",
       "description": "If true, returns only the latest crawl error counts.",
       "default": "true",
       "location": "query"
      },
      "platform": {
       "type": "string",
       "description": "The user agent type (platform) that made the request, for example 'web'. If not specified, we return results for all platforms.",
       "enum": [
        "mobile",
        "smartphoneOnly",
        "web"
       ],
       "enumDescriptions": [
        "",
        "",
        ""
       ],
       "location": "query"
      },
      "siteUrl": {
       "type": "string",
       "description": "The site's URL, including protocol, for example 'http://www.example.com/'",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "siteUrl"
     ],
     "response": {
      "$ref": "UrlCrawlErrorsCountsQueryResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/webmasters",
      "https://www.googleapis.com/auth/webmasters.readonly"
     ]
    }
   }
  },
  "urlcrawlerrorssamples": {
   "methods": {
    "get": {
     "id": "webmasters.urlcrawlerrorssamples.get",
     "path": "sites/{siteUrl}/urlCrawlErrorsSamples/{url}",
     "httpMethod": "GET",
     "description": "Retrieves details about crawl errors for a site's sample URL.",
     "parameters": {
      "category": {
       "type": "string",
       "description": "The crawl error category, for example 'authPermissions'",
       "required": true,
       "enum": [
        "authPermissions",
        "manyToOneRedirect",
        "notFollowed",
        "notFound",
        "other",
        "roboted",
        "serverError",
        "soft404"
       ],
       "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
       ],
       "location": "query"
      },
      "platform": {
       "type": "string",
       "description": "The user agent type (platform) that made the request, for example 'web'",
       "required": true,
       "enum": [
        "mobile",
        "smartphoneOnly",
        "web"
       ],
       "enumDescriptions": [
        "",
        "",
        ""
       ],
       "location": "query"
      },
      "siteUrl": {
       "type": "string",
       "description": "The site's URL, including protocol, for example 'http://www.example.com/'",
       "required": true,
       "location": "path"
      },
      "url": {
       "type": "string",
       "description": "The relative path (without the site) of the sample URL; must be one of the URLs returned by list",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "siteUrl",
      "url",
      "category",
      "platform"
     ],
     "response": {
      "$ref": "UrlCrawlErrorsSample"
     },
     "scopes": [
      "https://www.googleapis.com/auth/webmasters",
      "https://www.googleapis.com/auth/webmasters.readonly"
     ]
    },
    "list": {
     "id": "webmasters.urlcrawlerrorssamples.list",
     "path": "sites/{siteUrl}/urlCrawlErrorsSamples",
     "httpMethod": "GET",
     "description": "Lists a site's sample URLs for the specified crawl error category and platform.",
     "parameters": {
      "category": {
       "type": "string",
       "description": "The crawl error category, for example 'authPermissions'",
       "required": true,
       "enum": [
        "authPermissions",
        "manyToOneRedirect",
        "notFollowed",
        "notFound",
        "other",
        "roboted",
        "serverError",
        "soft404"
       ],
       "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
       ],
       "location": "query"
      },
      "platform": {
       "type": "string",
       "description": "The user agent type (platform) that made the request, for example 'web'",
       "required": true,
       "enum": [
        "mobile",
        "smartphoneOnly",
        "web"
       ],
       "enumDescriptions": [
        "",
        "",
        ""
       ],
       "location": "query"
      },
      "siteUrl": {
       "type": "string",
       "description": "The site's URL, including protocol, for example 'http://www.example.com/'",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "siteUrl",
      "category",
      "platform"
     ],
     "response": {
      "$ref": "UrlCrawlErrorsSamplesListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/webmasters",
      "https://www.googleapis.com/auth/webmasters.readonly"
     ]
    },
    "markAsFixed": {
     "id": "webmasters.urlcrawlerrorssamples.markAsFixed",
     "path": "sites/{siteUrl}/urlCrawlErrorsSamples/{url}",
     "httpMethod": "DELETE",
     "description": "Marks the provided site's sample URL as fixed, and removes it from the samples list.",
     "parameters": {
      "category": {
       "type": "string",
       "description": "The crawl error category, for example 'authPermissions'",
       "required": true,
       "enum": [
        "authPermissions",
        "manyToOneRedirect",
        "notFollowed",
        "notFound",
        "other",
        "roboted",
        "serverError",
        "soft404"
       ],
       "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
       ],
       "location": "query"
      },
      "platform": {
       "type": "string",
       "description": "The user agent type (platform) that made the request, for example 'web'",
       "required": true,
       "enum": [
        "mobile",
        "smartphoneOnly",
        "web"
       ],
       "enumDescriptions": [
        "",
        "",
        ""
       ],
       "location": "query"
      },
      "siteUrl": {
       "type": "string",
       "description": "The site's URL, including protocol, for example 'http://www.example.com/'",
       "required": true,
       "location": "path"
      },
      "url": {
       "type": "string",
       "description": "The relative path (without the site) of the sample URL; must be one of the URLs returned by list",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "siteUrl",
      "url",
      "category",
      "platform"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/webmasters"
     ]
    }
   }
  }
 }
}
